{"version":3,"sources":["components/Auth/Auth.js","components/PrivateRoute/PrivateRoute.js","components/Sidebar/Sidebar.js","components/Home/Home.js","components/Terminals/Terminal.js","components/Terminals/Terminals.js","components/Buyers/Pagination.js","components/Buyers/Buyers.js","components/Buyers/Buyer.js","components/NotFound/NotFound.js","components/Profile/Profile.js","App.js","serviceWorker.js","index.js"],"names":["Auth","props","history","useHistory","location","useLocation","useState","user","setValue","from","state","pathname","usernameInput","React","createRef","passwordInput","password","useRef","username","usernameError","setUsernameError","passwordError","setPasswordError","className","ref","type","placeholder","onClick","current","value","a","fetch","data","json","response","items","getUserData","avatar_url","login","toLowerCase","length","match","fakeAuth","authenticate","replace","fetchData","isAuthenticated","cb","this","localStorage","setItem","logout","PrivateRoute","children","rest","render","getItem","to","Side","Navbar","bg","expand","Brand","src","width","height","alt","Toggle","aria-controls","Collapse","id","Nav","Link","href","removeItem","window","reload","Home","Terminal","map","item","key","title","description","delete","Terminals","titleError","descError","addTerminal","bind","desc","filteredItems","filter","setState","obj","Component","Pagination","postsPerPage","totalPosts","paginate","currentPage","pageNumbers","i","Math","ceil","push","number","Buyers","buyers","users","setCurrentPage","setPostsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","changePostsPerPage","perPage","Table","striped","bordered","hover","responsive","sort","b","name","check","quantity","sum","pageNumber","Buyer","Card","style","margin","Img","variant","Body","Title","params","Text","NotFound","Profile","exact","path","component","App","url","setAvatarUrl","setUsername","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.39256b51.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react'\nimport { useHistory, useLocation} from 'react-router-dom'\nimport './Auth.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nexport default function Auth(props) {\n  let history = useHistory(),\n      location = useLocation();\n\n  let [user, setValue] = useState([]);\n\n  let { from } = location.state || { from: { pathname: '/' } };\n\n  const usernameInput = React.createRef();\n  const passwordInput = React.createRef();\n  const password = useRef(passwordInput);\n  const username = useRef(usernameInput);\n\n  // error handles\n  let [usernameError, setUsernameError] = useState(false);\n  let [passwordError, setPasswordError] = useState(false);\n\n  let login = () => {\n    if (username.current.value === '') {\n      return\n    }\n    const fetchData = async () => {\n      try {\n        const data = await fetch(`https://api.github.com/search/users?q=${username.current.value}`)\n        const response = await data.json()\n        setValue(user = response.items[0])\n        props.getUserData(user.avatar_url, user.login);\n      } catch(err) {\n        setUsernameError(true)\n      }\n      // if user exists\n      if (user && user.login.toLowerCase() === username.current.value.toLowerCase()) {\n        if (password.current.value.length >= 8 && password.current.value.match(/[A-Z]+/) && password.current.value.match(/[a-z]+/)) {\n          fakeAuth.authenticate(() => {\n            history.replace(from)\n          })\n        } else {\n          password.current.value = ''\n          setPasswordError(passwordError = true)\n        }\n        setUsernameError(usernameError = false)\n      } else {\n        setUsernameError(usernameError = true)\n        username.current.value = ''\n      }\n    }\n    fetchData()\n  }\n  \n\n  return (\n    <div className=\"login-block\">\n      <div className=\"col-10 col-lg-4 col-md-6 login-block__container\">\n        <h4 className='text-center'>Имя пользователя GitHub</h4>\n        {usernameError ? <small>Такой пользователь не найден</small> : ''}\n        {passwordError ? <small>Введите правильный пароль</small> : ''}\n        <div>\n          <input className=\"form-control\" ref={username} type=\"text\" placeholder='Имя пользователя'/>\n          <input className=\"form-control\" ref={password} type=\"password\" placeholder='Пароль'/>\n        </div>\n        <button className=\"btn btn-success\" onClick={ login }>Войти</button>\n      </div>\n    </div>\n  )\n}\n\nconst fakeAuth = {\n  isAuthenticated: false,\n  authenticate(cb) {\n    this.isAuthenticated = true\n    localStorage.setItem(\"mydata\", this.isAuthenticated)\n    cb()\n  },\n  logout(cb) {\n    this.isAuthenticated = false\n    cb()\n  }\n}","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\n\nexport default function PrivateRoute({children, ...rest}) {\n  return (\n    <Route\n      {...rest}\n      render = {({location}) => \n      localStorage.getItem('mydata') ? (\n          children\n        ) : (\n          <Redirect \n            to={{\n              pathname: '/login',\n              state: { from: location}\n            }}\n          />\n        )\n      }\n    />\n  )\n}","import React from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport './Sidebar.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nexport default function Side() {\n\n  function logOut() {\n    localStorage.removeItem('username')\n    localStorage.removeItem('mydata')\n    localStorage.removeItem('avatar_url')\n    window.location.reload(false);\n  }\n\n  return(\n    <Navbar bg=\"light\" expand=\"lg\" className=\"d-lg-flex flex-lg-column p-0\">\n      <Navbar.Brand className=\"d-flex align-items-center flex-lg-column m-0\">\n        <img src={localStorage.getItem('avatar_url')} className='mx-auto rounded-circle' width=\"50\" height=\"50\" alt=\"profile_photo\"/>\n        <h6 className=\"m-0\">{localStorage.getItem(\"username\")}</h6>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto d-lg-flex flex-lg-column\">\n          <Nav.Link href=\"#/terminals\">Терминалы</Nav.Link>\n          <Nav.Link href=\"#/buyers\">Покупатели</Nav.Link>\n          <button onClick={logOut} className=\"btn btn-secondary\">Log Out</button>\n        </Nav>\n      </Navbar.Collapse>\n      <div className=\"d-none d-lg-flex py-3 px-1 bg-dark\">\n        <h6 className='m-0 text-light'>Copyright © 2020</h6>\n      </div>\n    </Navbar>\n  )\n}","import React from 'react'\nexport default function Home() {\n  return (\n    <h1 className='mx-auto'>Home page</h1>\n  )\n}","import React from 'react'\n\nexport default function Terminal(props) {\n  const {items} = props\n  return (\n    <ul>\n      {\n        items.map(item => (\n            <li key={item.id} className=\"card\">\n              <div className=\"card-body\">\n                <h1>{item.title}</h1>\n                <h4>{item.description}</h4>\n                <button className=\"btn-danger btn\" onClick={() => props.delete(item.id)}>Удалить</button>\n              </div>\n            </li>\n          )\n        )\n      }\n    </ul>\n  )\n}","import React, { Component } from 'react'\nimport Terminal from './Terminal'\n\nexport default class Terminals extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      items: [\n\n      ],\n      titleError: false,\n      descError: false,\n\n    }\n\n    this.addTerminal = this.addTerminal.bind(this)\n    this.delete = this.delete.bind(this)\n\n    this.title = React.createRef();\n    this.desc = React.createRef();\n  }\n\n  delete(id) {\n    const { items } = this.state\n    const filteredItems = items.filter(item => item.id !== id)\n    this.setState({items: filteredItems})\n  }\n\n  addTerminal() {\n    this.setState({titleError: false})\n    this.setState({descError: false})\n    // if inputs are empty\n      if (this.title.current.value === '') {\n      this.setState({titleError: true})\n      return\n    } else if (this.desc.current.value === '') {\n      this.setState({descError: true})\n      return\n    }\n    // new terminal\n    const obj = {\n      id: this.state.items.length,\n      title: this.title.current.value,\n      description: this.desc.current.value\n    }\n    const items = [...this.state.items, obj]\n    \n    this.setState({\n      items: items\n    })\n    \n    // clear inputs\n    this.title.current.value = ''\n    this.desc.current.value = ''\n  }\n\n  render() {\n    const { items, titleError, descError } = this.state;\n    return (\n      <div className=\"col-12 col-sm-10 col-md-7 col-lg-5 mx-auto\">\n        <h1 className=\"text-center\">Терминалы</h1>\n        <div className=\" mb-2\">\n          <input className={titleError ? 'form-control alert-danger' : 'form-control'} type=\"text\" ref={this.title} placeholder='Название терминала'/>\n          {titleError ? <p className=\"alert alert-danger m-0\">Введите название терминала</p> : ''}\n          <input className={descError ? 'form-control alert-danger' : 'form-control'} type=\"text\" ref={this.desc} placeholder='Описание'/>\n          {descError ? <p className=\"alert alert-danger m-0\">Введите описание терминала</p> : ''} \n          <button className=\"btn btn-success\" onClick={this.addTerminal}>Добавить</button>\n        </div>\n        <Terminal delete={this.delete} items={items}/>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport './Pagination.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nfunction Pagination({ postsPerPage, totalPosts, paginate , currentPage}) {\n  const pageNumbers = [];\n  // number of pages math\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className='pagination'>\n        {pageNumbers.map(number => (\n          <li key={number} className={currentPage === number ? 'page-item active' : 'page-item'}>\n            <button onClick={() => paginate(number)} className='page-link'>\n              {number}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Table } from 'react-bootstrap'\nimport Pagination from './Pagination'\nimport buyers from './../../data/buyers.json'\n\nimport './Buyers.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n \nexport default function Buyers() {\n  const [ users, setValue ] = useState([...buyers]);\n  // sort functions\n  function sortByName() {\n    buyers.sort((a, b) => a.name > b.name ? 1 : -1)\n    setValue([...buyers])\n  }\n  function sortByCheck() {\n    buyers.sort((a, b) => a.check > b.check ? -1 : 1)\n    setValue([...buyers])\n  }\n  function sortByQuantity() {\n    buyers.sort((a, b) => a.quantity > b.quantity ? -1 : 1)\n    setValue([...buyers])\n  }\n  function sortBySumAmount() {\n    buyers.sort((a, b) => a.sum > b.sum ? -1 : 1)\n    setValue([...buyers])\n  }\n\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(15);\n\n  //get current post\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = users.slice(indexOfFirstPost, indexOfLastPost)\n\n\n  // change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  // pagination change\n  function changePostsPerPage(perPage) {\n    setPostsPerPage(perPage)\n    setCurrentPage(1)\n  }\n\n  return (\n    <div className=\"mx-auto d-flex flex-column justify-content-center align-items-center pt-3 pb-3\">\n      <div className=\"mb-3\">\n        Показать на странице\n        <button className={postsPerPage === 5 ? 'btn-primary btn' : 'btn-outline-primary btn'} onClick={() => changePostsPerPage(5)}>5</button>\n        <button className={postsPerPage === 10 ? 'btn-primary btn' : 'btn-outline-primary btn'} onClick={() => changePostsPerPage(10)}>10</button>\n        <button className={postsPerPage === 15 ? 'btn-primary btn' : 'btn-outline-primary btn'} onClick={() => changePostsPerPage(15)}>15</button>\n      </div>\n      <Table striped bordered hover responsive>\n      <thead>\n        <tr>\n          <th>ID Покупателя</th>\n          <th className=\"table-head__title\"onClick={sortByName}>Имя покупателя</th>\n          <th className=\"table-head__title\"onClick={sortByCheck}>Средний чек</th>\n          <th className=\"table-head__title\"onClick={sortByQuantity}>Количество покупок</th>\n          <th className=\"table-head__title\"onClick={sortBySumAmount}>Общая выручка</th>\n        </tr>\n      </thead>\n      <tbody>\n        {currentPosts.map(user => (\n          <tr key={user.id}>\n            <th><Link className=\"d-block text-center\" to={`/buyers/${user.id}`}>{user.id}</Link></th>\n            <th>{user.name}</th>\n            <th>{user.check}$</th>\n            <th>{user.quantity}</th>\n            <th>{user.sum}$</th>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n    {postsPerPage === users.length ? '' : <Pagination \n      postsPerPage={postsPerPage}\n      totalPosts={users.length}\n      paginate={paginate}\n      currentPage={currentPage}\n    />}\n    </div>\n  )\n}","import React from 'react'\nimport buyers from './../../data/buyers.json'\nimport { Card } from 'react-bootstrap'\n\nexport default function Buyer(props) {\n  return (\n    <Card style={{ width: '18rem', margin:  'auto' }}>\n      <Card.Img variant=\"top\" src=\"/private-account/no-photo.jpg\" />\n      <Card.Body>\n        <Card.Title>{buyers[props.match.params.id - 1].name}</Card.Title>\n        <Card.Text>Средний чек - {buyers[props.match.params.id - 1].check}$</Card.Text>\n        <Card.Text>Количество покупок - {buyers[props.match.params.id - 1].quantity}</Card.Text>\n        <Card.Text>Общая выручка - {buyers[props.match.params.id - 1].sum}$</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}","import React from 'react'\n\nexport default function NotFound() {\n  return (\n    <div className=\"mx-auto\">\n      <h1>Page not found</h1>\n    </div>\n  )\n}","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Sidebar from './../Sidebar/Sidebar'\nimport Home from './../Home/Home'\nimport Terminals from './../Terminals/Terminals'\nimport Buyers from './../Buyers/Buyers'\nimport Buyer from './../Buyers/Buyer'\nimport NotFound from '../NotFound/NotFound'\n\nimport './Profile.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\n\nexport default function Profile(props) {\n  return(\n    <div className='profile h-100 d-lg-flex'>\n      <Sidebar props={props}/>\n      <Switch>\n        <Route exact path='/' component={Home}/>\n        <Route path='/terminals' component={Terminals}/>\n        <Route exact path='/buyers' component={Buyers}/>\n        <Route path=\"/buyers/:id\" component={Buyer}/>\n        <Route path='*' component={NotFound} />\n      </Switch>\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport {HashRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Auth from './components/Auth/Auth'\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute'\nimport Profile from './components/Profile/Profile'\n\nimport './App.css'\n\n\nexport default function App() {\n  let [url, setAvatarUrl] = useState('')\n  let [, setUsername] = useState('')\n\n  function getUserData(url, username) {\n    setAvatarUrl(url)\n    setUsername(username)\n    localStorage.setItem('avatar_url', url)\n    localStorage.setItem('username', username)\n  }\n  return (\n    <Router>\n      <div className='App'>\n        <Switch>\n          <Route path='/login'>\n            <Auth getUserData={getUserData}/>\n          </Route>\n          <PrivateRoute path='/'>\n            <Profile url={url}/> \n          </PrivateRoute>\n        </Switch>\n      </div>\n    </Router>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}